#!/bin/bash

root=`grep -o ".*/src/odoo/[^/]*" <<< "$PWD"`
test -z "$root" && >&2 echo "bad dir: $PWD" && exit 1

__VERSION=$(_envdb || basename $root)
case $(basename $0) in
    'oe')
        __ADDONS=("${root}/odoo/addons" "$root/enterprise")
        __OE=1
        ;;
    'o')
        __ADDONS=("${root}/odoo/addons")
        ;;
esac

if [ -d "${root}/design-themes" ]
then
    __ADDONS+=("$root/design-themes")
fi

wait_then_open() {
    for ((i = 0; i < 120; ++i))
    do
        sleep 1
        test -z "$(curl -s $1)" && continue
        test -z "$__PRODUCTION" && sh -c "open $2" || sh -c "open $2?debug=assets"
        break
    done
}
community() {
    test -z "$__DBSET" && db="${__VERSION}"
    unset __OE
}
enterprise() {
    test -z "$__DBSET" && db="${__VERSION}e"
}
all_modules() {
    modules=(`ls "$root/odoo/addons" | grep -vE '^(l10n|test)'`)
    test $__OE && modules+=(`ls "$root/enterprise" | grep -vE '^(l10n|test)'`)
    tr ' ' ',' <<< ${modules[@]}
}

get_flag_args() {
    while [ -n "$1" ] && [ "${1:0:1}" != '-' ]
    do
        echo $1
        shift
    done
}

exe="${root}/odoo/odoo-bin"
__DEFAULTLOGLEVEL=warn

while [ -n "$1" ]
do
    if [ "${1:0:1}" = '-' ]
    then
        flag=${1:1:1}
        if [ ${#1} -gt 2 ]
        then
            tmp=${1:2}
            shift
            set -- $tmp "$@"
        else
            shift
        fi
    else
        flag=${1:0:1}
        if [ ${#1} -gt 1 ]
        then
            tmp=${1:1}
            shift
            set -- $tmp "$@"
        else
            shift
        fi
    fi
    case "$flag" in
        'i' | 'u')  # install / update
            if [ "$1" = 'all' ]
            then
                shift
                case "$flag" in
                    'i') args+=("-i`all_modules`");;
                    'u') args+=("-u`querydb -d $db -s, -p '.'`");;
                esac
            else
                init="-${flag}${1}"
                shift
                arg=$1
                while [ -n "$arg" ] && [ "${arg:0:1}" != '-' ]
                do
                    init="${init},${arg}"
                    shift
                    arg=$1
                done
                args+=($init)
            fi
            __DEFAULTLOGLEVEL=info;;
      'h')
          __LOCALHOST=1;;
      'O')
          __OPEN=1;;
      'd')
          db=$1
          shift;;
      'x')
          args+=("--stop-after-init");;
      's')
          exe="${exe} shell"
          test ! $__LOGFILESET && args+=("--logfile=/tmp/${db}.log");;
      'q')
          test ! $__LOGFILESET && args+=("--logfile=/tmp/${db}.log");;
      'f')
          __LOGFILESET=1
          args+=("--logfile=${1}")
          shift;;
      'l')
          __LOGLEVEL=$1
          shift;;
      'v')
          __LOGLEVEL=info;;
      'V')
          __LOGLEVEL=debug;;
      'r')
          # reset database
          # don't eval yet in case `-d` flag was used
          __TODO+=("dropdb --if-exists \$db && createdb \$db");;
      'P')
          __PRODUCTION=1;;
      't')
          __PRODUCTION=1
          __TESTTAG=$(sed 's/^\([^.:]*\)$/.\1/' <<< $1)
          if [ -z "${__TESTTAG/*.test_*}" ]
          then
              shift
              echo $__TESTTAG > /tmp/last_odoo_test
          else
              read __TESTTAG < /tmp/last_odoo_test
          fi
          args+=(--stop-after-init --test-enable --test-tags=${__TESTTAG})
          ;;
      'T')
          __PRODUCTION=1
          test -z "${PWD/*\/enterprise*}" \
              && __PAT="${root}/enterprise/*/tests/*.py" \
              || __PAT="${root}/odoo/*addons/*/tests/*.py"

          __CLASS__TEST=($( \
              git diff -W --diff-filter=AM -U0 HEAD~ $__PAT \
              | rg '^(?:[+ ]class (\w+)|\+\s*def (test_\w+))' -or '$1$2' \
          ))
          for match in "${__CLASS__TEST[@]}"; do
              if [ -n "${match/test_*}" ]; then
                  __CLASS=":${match}"
              else
                  __TEST_TAGS="${__TEST_TAGS:+$__TEST_TAGS,}${__CLASS}.${match}"
              fi
          done
          echo $__TEST_TAGS > /tmp/last_odoo_test
          test "$__TEST_TAGS" \
              && args+=(--stop-after-init --test-enable --test-tags=${__TEST_TAGS})
          ;;
      '-')
          # add odoo-bin flag (no spaces)
          args+=("--${1}")
          shift;;
      *)
           >&2 echo "unkown arg: $flag" && exit 1
    esac
done

args+=("--log-level=${__LOGLEVEL:-$__DEFAULTLOGLEVEL}")
test -z "$__PRODUCTION" && args+=('--dev=all')

if [ -z "$__LOCALHOST" ]
then
    ip="127.0.${__VERSION}"
    port="8${__VERSION//./}"
    args+=("-p${port}")
fi

if [ -n "$__OPEN" ]
then
    url="http://${ip:-localhost}:${port:-8069}"
    __TODO+=("wait_then_open $url ${url}/web")
fi

if [ -d "${root}/venv" ]
then
    source "${root}/venv/bin/activate"
fi

for _todo in "${__TODO[@]}"
do
    eval "echo $_todo" && eval "$_todo" &
done

cd "${root}/odoo"
exec="$exe -d$db --addons-path=$(tr \  \, <<< ${__ADDONS[@]}) ${args[@]}"
echo $exec && $exec
